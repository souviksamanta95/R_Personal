geom_histogram() + theme_classic()
p1 + aes(color=Season)
p1 + aes(fill()=Season)
p1 + aes(fill=Season)
# For 2005 -
p1 <- ggplot(rice, aes(Production))+
geom_histogram(color=black) + theme_classic()
p1 + aes(fill=Season)
# For 2005 -
p1 <- ggplot(rice, aes(Production))+
geom_histogram(color="black") + theme_classic()
p1 + aes(fill=Season)
d1 %>% filter(Crop_Year==2005,Crop=="Rice") %>%
ggplot(rice, aes(Production))+
geom_histogram(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice") %>%
ggplot(aes(Production))+
geom_histogram(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice") %>%
ggplot(aes(Production))+
geom_histogram(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice") %>%
ggplot(aes(Production),fill=Season)+
geom_histogram(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice") %>%
ggplot(aes(Production),fill=Season)+
geom_histogram(color="black") + theme_classic()
p1 <- d1 %>% filter(Crop_Year==2005,Crop=="Rice") %>%
ggplot(aes(Production))+
geom_histogram(color="black") + theme_classic()
p1 + aes(fill=Season)
d1 %>% filter(Crop_Year==2005,Crop=="Rice") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()
d1 %>% filter(Crop=="Rice") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
d1 %>% filter(Crop_Year==c(2005,2006),Crop=="Rice") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
d1 %>% filter(Crop_Year==c(2005,2006,2007),Crop=="Rice") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
head(y_2005_crop)
d1 %>% filter(Crop_Year==c(2005,2006,2007,2008),Crop=="Rice") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
d1 %>% filter(Crop_Year==c(2004,2005),Crop=="Rice") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
# Production of Moong(Green Gram) -
d1 %>% filter(Crop_Year==c(2004,2005),Crop=="Moong(Green Gram)") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
# Production of Rice -
d1 %>% filter(Crop_Year==c(2004,2005),Crop=="Rice") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
# Production of Maize -
d1 %>% filter(Crop_Year==c(2004,2005),Crop=="Maize") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
# Production of Moong(Green Gram) -
d1 %>% filter(Crop_Year==c(2004,2005),Crop=="Moong(Green Gram)") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
# Production of Urad -
d1 %>% filter(Crop_Year==c(2004,2005),Crop=="Urad") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
# Production of Rice -
d1 %>% filter(Crop_Year==c(2004,2005),Crop=="Rice") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
# Production of Maize -
d1 %>% filter(Crop_Year==c(2004,2005),Crop=="Maize") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
# Production of Moong(Green Gram) -
d1 %>% filter(Crop_Year==c(2004,2005),Crop=="Moong(Green Gram)") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
# Production of Urad -
d1 %>% filter(Crop_Year==c(2004,2005),Crop=="Urad") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(Crop_Year~., scales = "free")
d1 %>% filter(Crop_Year==2005,State_Name=="Andhra Pradesh") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(District_Name~., scales = "free")
d1 %>% filter(Crop_Year==2005,State_Name=="Andhra Pradesh") %>%
ggplot(aes(Production))+
geom_bar(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(District_Name~., scales = "free")
d1 %>% filter(Crop_Year==2005,State_Name=="Andhra Pradesh") %>%
ggplot(aes(Production))+
geom_bar(color="black",aes(fill=Season)) + theme_classic()
d1 %>% group_by(State = State_Name) %>%
summarize(Total = sum(Production)) %>% arrange(desc(Total))
d1 %>% group_by(State = State_Name,Crop=="Rice") %>%
summarize(Total = sum(Production)) %>% arrange(desc(Total))
d1 %>% filter(,Crop=="Rice") %>% group_by(State = State_Name) %>%
summarize(Total = sum(Production)) %>% arrange(desc(Total))
d1 %>% filter(Crop=="Rice") %>% group_by(State = State_Name) %>%
summarize(Total = sum(Production)) %>% arrange(desc(Total))
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=Season)) + theme_classic()+
facet_grid(District_Name~., scales = "free")
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(Production))+
geom_histogram(color="black",aes(fill=District_Name)) + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(Production, District_Name))+
geom_histogram(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(x=Production, y=District_Name))+
geom_histogram(color="black") + theme_classic()
ggplot(aes(x=Production, y=factor(District_Name))+
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(x=Production, y=factor(District_Name)))+
geom_histogram(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(x=Production, y=as.factor(District_Name)))+
geom_histogram(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(x=Production, y=as.factor(District_Name)))+
geom_point(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(x=Production, y=as.factor(District_Name)))+
geom_line(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(x=Production, y=as.factor(District_Name)))+
geom_smooth(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(y=Production, x=as.factor(District_Name)))+
geom_smooth(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(y=Production, x=as.factor(District_Name)))+
geom_bar(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(y=Production, x=District_Name))+
geom_bar(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(Production))+
geom_bar(color="black") + theme_classic()
class(d1$District_Name)
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(x=factor(District_Name),y=Production))+
geom_bar(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(x=factor(District_Name),y=Production))+
geom_area(color="black") + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(x=factor(District_Name),y=Production))+
geom_area() + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(Production))+
geom_area() + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(Production,count))+
geom_area() + theme_classic()
d1 %>% filter(Crop_Year==2005,Crop=="Rice",State_Name=="Bihar") %>%
ggplot(aes(Production))+
geom_bar() + theme_classic()
plot(rice_new)
sum(is.na(yrr_rice))
# Year wise missing values - in the data we can see so many missing values in 2015, so we should remove record for 2015 which is the last row
nrow(yrr_rice)
yrr_rice <- yrr_rice[-19,]
# State wise missing values ---
sapply(yrr_rice, function(x)sum(is.na(x)))
rice_new <- yrr_rice %>% select(-`Andaman and Nicobar Islands`,-Jharkhand)
sum(is.na(rice_new))
sapply(rice_new, function(x)sum(is.na(x)))
library(imputeTS)
rice_new <- na_mean(rice_new)
sum(is.na(rice_new))
plot(rice_new)
plot(rice_new)
?spread
?gather
rice_str <- gather(rice_new, key = "State_Name", value = "Total_Production" )
rice_str
View(rice_str)
rice_str <- gather(rice_new, key = "Year", value = "Total_Production",c(-State_Name) )
rice_str <- gather(rice_new, key = "Year", value = "Total_Production",c(-Crop_Year))
ggplot(rice_str, aes(x=Crop_Year,y=Total_Production))
ggplot(rice_str, aes(x=Crop_Year,y=Total_Production))+
geom_bar(color="black") + theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=Total_Production))+
geom_histogram(color="black") + theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=factor(Total_Production)))+
geom_histogram(color="black") + theme_classic()
ggplot(rice_str, aes(Total_Production)+
ggplot(rice_str, aes(Total_Production))+
geom_histogram(color="black") + theme_classic()
ggplot(rice_str, aes(Total_Production))+
geom_histogram(color="black") + theme_classic()
rice_str <- gather(rice_new, key = "State_Name", value = "Total_Production",c(-Crop_Year))
ggplot(rice_str, aes(Total_Production,Crop_Year))+
geom_histogram(color="black") + theme_classic()
ggplot(rice_str, aes(Total_Production,Crop_Year))+
geom_step(color="black") + theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=Total_Production))+
geom_step(color="black") + theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=Total_Production))+
geom_bar(color="black") + theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=Total_Production))+
geom_point(color="black") + theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=Total_Production,size = Total_Production))+
geom_point(color="black") + theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=sum(Total_Production)))+
geom_bar(color="black") + theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=State_Name))+
geom_bar(color="black") + theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=State_Name))+
geom_point(color="black") + theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=State_Name, size=Total_Production))+
geom_point(color="black") + theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=State_Name, size=Total_Production, color = State_Name))+
geom_point() + theme_classic()
rice_str %>% filter(Crop=="Bihar") %>%
ggplot(aes(Total_Production, color=Crop_Year))+
geom_point() + theme_classic()
rice_str %>% filter(State_Name=="Bihar") %>%
ggplot(aes(Total_Production, color=Crop_Year))+
geom_point() + theme_classic()
rice_str %>% filter(State_Name=="Bihar") %>%
ggplot(aes(Total_Production, color=Crop_Year))+
geom_bar() + theme_classic()
rice_str %>% filter(State_Name=="Bihar") %>%
ggplot(aes(x=Crop_Year,y=Total_Production))+
geom_bar() + theme_classic()
rice_str %>% filter(State_Name=="Bihar") %>%
ggplot(aes(x=Crop_Year,y=Total_Production))+
geom_bar(stat=identify()) + theme_classic()
rice_str %>% filter(State_Name=="Bihar") %>%
ggplot(aes(Crop_Year,Total_Production))+
geom_bar(stat="identify") + theme_classic()
rice_str %>% filter(State_Name=="Bihar") %>%
ggplot(aes(Crop_Year,Total_Production))+
geom_bar(stat="identity") + theme_classic()
rice_str <- gather(rice_new, key = "State_Name", value = "Production",c(-Crop_Year))
rice_str %>% group_by(State = State_Name) %>%
summarize(Total = sum(Production)) %>% arrange(desc(Total))
# Year-wise rice production for Bihar -
rice_str %>% filter(State_Name=="Bihar") %>%
ggplot(aes(Crop_Year,Production))+
geom_bar(stat="identity", color="black", fill = "blue") + theme_classic()
# Year-wise rice production for Bihar -
rice_str %>% filter(State_Name=="Bihar") %>%
ggplot(aes(Crop_Year,Production))+
geom_bar(stat="identity", color="black", fill = "light blue") + theme_classic()
# Year-wise rice production for Bihar -
rice_str %>% filter(State_Name=="Bihar") %>%
ggplot(aes(Crop_Year,Production))+
geom_bar(stat="identity", color="black", fill = "light blue") +
ggtitle("Year-wise rice production for Bihar") +
theme_classic()
# Year-wise rice production for Bihar -
rice_str %>% filter(State_Name=="Bihar") %>%
ggplot(aes(Crop_Year,Production))+
geom_bar(stat="identity", color="black", fill = "light blue") +
ggtitle("Year-wise rice production for Bihar") +
theme_classic()
# Year-wise rice production for Uttar Pradesh -
rice_str %>% filter(State_Name=="Uttar Pradesh") %>%
ggplot(aes(Crop_Year,Production))+
geom_bar(stat="identity", color="black", fill = "light blue") +
ggtitle("Year-wise rice production for Uttar Pradesh") +
theme_classic()
# Year-wise rice production for Assam -
rice_str %>% filter(State_Name=="Assam") %>%
ggplot(aes(Crop_Year,Production))+
geom_bar(stat="identity", color="black", fill = "light blue") +
ggtitle("Year-wise rice production for Assam") +
theme_classic()
# Year-wise rice production for Odisha -
rice_str %>% filter(State_Name=="Odisha") %>%
ggplot(aes(Crop_Year,Production))+
geom_bar(stat="identity", color="black", fill = "light blue") +
ggtitle("Year-wise rice production for Odisha") +
theme_classic()
# Year-wise rice production for Karnataka -
rice_str %>% filter(State_Name=="Karnataka") %>%
ggplot(aes(Crop_Year,Production))+
geom_bar(stat="identity", color="black", fill = "light blue") +
ggtitle("Year-wise rice production for Karnataka") +
theme_classic()
ggplot(rice_str, aes(x=Crop_Year,y=State_Name, size=Total_Production, color = State_Name))+
geom_point() + theme_classic()
d1 <- read.csv("C:/Users/souvi/Documents/R/IM507/apy.csv")
#View(d1)
head(d1)
dim(d1)
names(d1)
summary(d1)
str(d1)
class(d1$Production)
# Class of Production has been taken as factor which needs to be converted to double
d1$Production <- as.double(d1$Production)
str(d1)
class(d1$Production)
typeof(d1$Production)
#Check for missing values -----
sum(is.na(d1))
library(dplyr)
library(tidyr)
d_year <- d1 %>% group_by(Crop_Year,State_Name)%>%
summarize(Total_Production = sum(Production))
yrr <- spread(d_year, key = "State_Name", value = "Total_Production" )
y_2005 <- d1 %>% filter(Crop_Year==2005)
y_2005 <- d1 %>% filter(Crop_Year==2005)
y_2005_crop <- y_2005 %>% group_by(Crop = Crop) %>%
summarize(Total = sum(Production)) %>% arrange(desc(Total))
head(y_2005_crop)
rice <- d1 %>% filter(Crop=="Rice")
rice_state <- rice %>% group_by(Crop_Year,State_Name)%>%
summarize(Total_Production = sum(Production))
yrr_rice <- spread(rice_state, key = "State_Name", value = "Total_Production" )
dim(yrr_rice)
sum(is.na(yrr_rice))
# Year wise missing values - in the data we can see so many missing values in 2015, so we should remove record for 2015 which is the last row
nrow(yrr_rice)
yrr_rice <- yrr_rice[-19,]
# State wise missing values ---
sapply(yrr_rice, function(x)sum(is.na(x)))
rice_new <- yrr_rice %>% select(-`Andaman and Nicobar Islands`,-Jharkhand)
sum(is.na(rice_new))
sapply(rice_new, function(x)sum(is.na(x)))
library(imputeTS)
rice_new <- na_mean(rice_new)
sum(is.na(rice_new))
library(ggplot2)
rice_str <- gather(rice_new, key = "State_Name", value = "Production",c(-Crop_Year))
View(y_2005)
getwd()
setwd("C:/Users/souvi/Documents/R/Insight/Assignment")
data <- read.csv("games.csv")
library(dplyr)
game <- data %>% select(id, victory_status, winner, white_rating, black_rating)
game <- game %>% mutate(expected_win = ifelse(winner=="draw",0.5,ifelse(white_rating>black_rating&winner=="white",1,ifelse(white_rating<black_rating&winner=="black",1,0))))
mean(game$expected_win)
sd(game$expected_win)
set.seed(12345)
s <- game[sample(1:nrow(game),1000),]
mean(s$expected_win)
zt <- t.test(s$expected_win, alternative="less", mu = 0.7, conf.int=0.95)
tt <- t.test(s$expected_win, alternative="less", mu = 0.7, conf.int=0.95)
tt
tt <- t.test(s$expected_win, alternative="less", mu = 0.6, conf.int=0.95)
tt
tt <- t.test(s$expected_win, alternative="less", mu = 0.8, conf.int=0.95)
tt
game <- data %>% filter(winner!="draw") %>% select(id, victory_status, winner, white_rating, black_rating)
game <- game %>% mutate(expected_win = ifelse(white_rating>black_rating&winner=="white",1,ifelse(white_rating<black_rating&winner=="black",1,0)))
mean(game$expected_win)
sd(game$expected_win)
tt <- t.test(game$expected_win, alternative="less", mu = 0.8, conf.int=0.95)
tt
tt <- t.test(game$expected_win, alternative="less", mu = 0.7, conf.int=0.95)
tt
tt <- t.test(game$expected_win, alternative="less", mu = 0.6, conf.int=0.95)
tt
tt <- t.test(s$expected_win, alternative="less", mu = 0.6, conf.int=0.95)
mean(game$expected_win)
s <- game[sample(1:nrow(game),1000),]$expected_win
zt <- z.test(s, sigma.s = 0.6, conf.level=0.95)
zt <- z.test(s, sigma.s = 0.6)
zt <- z.test(s, sigma.x = 0.6)
?z.test
?z.test()
?t.test()
tt <- t.test(s, alternative="less", mu = 0.6, conf.level=0.95)
tt
tt <- t.test(s, alternative="less", mu = 0.6, conf.level = 0.95)
tt
?binom.test()
getwd()
setwd("C:/Users/souvi/Documents/R/Insight/Assignment")
data <- read.csv("games.csv")
View(data)
tt <- t.test(s, alternative="less", mu = 0.7, conf.level = 0.95)
tt
getwd()
setwd("C:/Users/souvi/Documents/R/Insight/Assignment")
data <- read.csv("games.csv")
library(dplyr)
game <- data %>% filter(winner!="draw") %>% select(id, victory_status, winner, white_rating, black_rating)
game <- game %>% mutate(expected_win = ifelse(white_rating>black_rating&winner=="white",1,ifelse(white_rating<black_rating&winner=="black",1,0)))
mean(game$expected_win)
sd(game$expected_win)
set.seed(12345)
s <- game[sample(1:nrow(game),1000),]$expected_win
mean(s$expected_win)
tt <- t.test(s, alternative="less", mu = 0.7, conf.level = 0.95)
tt
View(data)
View(game)
s <- game[sample(1:nrow(game),1000),]
View(s)
tt <- t.test(s$expected_win, alternative="less", mu = 0.7, conf.level = 0.95)
tt
game <- game %>% mutate(expected_win = ifelse(white_rating>black_rating&winner=="white","T",ifelse(white_rating<black_rating&winner=="black","T","F")))
count(game$expected_win=="T")
count(game$expected_win)
summary(game$expected_win)
typeof(game$expected_win)
t <- sum(game$expected_win=="T")
game$expected_win=="T"
length(game$expected_win)
t <- sum(game$expected_win=="T")
t
t <- sum(game$expected_win=="T")/length(game$expected_win)
prop <- sum(game$expected_win=="T")/length(game$expected_win)
prop
x <- sum(s$expected_win=="T")
n <- length(s)
bt <- binom.test(x, n, p = 0.5, alternative = ("two.sided"), conf.level = 0.95)
bt
bt <- binom.test(x, n, p = 0.7, alternative = ("two.sided"), conf.level = 0.95)
bt
x
s <- game[sample(1:nrow(game),1000),]
x <- sum(s$expected_win=="T")
n <- length(s)
bt <- binom.test(x, n, p = 0.7, alternative = ("two.sided"), conf.level = 0.95)
bt
x <- sum(s$expected_win=="T")
n <- length(s)
bt <- binom.test(x, n, p = 0.7, alternative = ("two.sided"), conf.level = 0.95)
n <- length(s$expected_win)
bt <- binom.test(x, n, p = 0.7, alternative = ("two.sided"), conf.level = 0.95)
bt
set.seed(12345)
n <- 1000
s <- game[sample(1:nrow(game),n),]
x <- sum(s$expected_win=="T")
bt <- binom.test(x, n, p = 0.7, alternative = ("two.sided"), conf.level = 0.95)
bt
bt <- binom.test(x, n, p = 0.6, alternative = ("two.sided"), conf.level = 0.95)
bt
getwd()
setwd("C:/Users/souvi/Documents/R/Insight/Assignment")
data <- read.csv("games.csv")
library(dplyr)
game <- data %>% filter(winner!="draw") %>% select(id, victory_status, winner, white_rating, black_rating)
game <- game %>% mutate(expected_win = ifelse(white_rating>black_rating&winner=="white","T",ifelse(white_rating<black_rating&winner=="black","T","F")))
prop <- sum(game$expected_win=="T")/length(game$expected_win)
prop
set.seed(12345)
n <- 1000
s <- game[sample(1:nrow(game),n),]
x <- sum(s$expected_win=="T")
bt <- binom.test(x, n, p = prop, alternative = ("two.sided"), conf.level = 0.95)
bt
bt <- binom.test(x, n, p = prop, alternative = ("lower"), conf.level = 0.95)
bt <- binom.test(x, n, p = prop, alternative = ("less"), conf.level = 0.95)
bt
bt <- binom.test(x, n, p = 0.7, alternative = ("less"), conf.level = 0.95)
bt
summary(bt)
bt
set.seed(12344)
n <- 1000
s <- game[sample(1:nrow(game),n),]
x <- sum(s$expected_win=="T")
bt <- binom.test(x, n, p = 0.7, alternative = ("two.sided"), conf.level = 0.95)
bt
set.seed(12345)
n <- 1000
s <- game[sample(1:nrow(game),n),]
x <- sum(s$expected_win=="T")
bt <- binom.test(x, n, p = 0.7, alternative = ("two.sided"), conf.level = 0.95)
bt
getwd()
setwd("C:/Users/souvi/Documents/R/Insight/Assignment")
data <- read.csv("games.csv")
library(dplyr)
game <- data %>% filter(winner!="draw") %>% select(id, victory_status, winner, white_rating, black_rating)
game <- game %>% mutate(expected_win = ifelse(white_rating>black_rating&winner=="white","T",ifelse(white_rating<black_rating&winner=="black","T","F")))
prop <- sum(game$expected_win=="T")/length(game$expected_win)
prop
getwd()
setwd("C:/Users/souvi/Documents/R/Insight/Assignment")
data <- read.csv("games.csv")
library(dplyr)
game <- data %>% filter(winner!="draw") %>% select(id, victory_status, winner, white_rating, black_rating)
game <- game %>% mutate(expected_win = ifelse(white_rating>black_rating&winner=="white",1,ifelse(white_rating<black_rating&winner=="black",1,0)))
mean(game$expected_win)
sd(game$expected_win)
set.seed(12345)
s <- game[sample(1:nrow(game),1000),]
mean(s$expected_win)
tt <- t.test(s$expected_win, alternative="less", mu = 0.7, conf.level = 0.95)
tt
mean(game$expected_win)
